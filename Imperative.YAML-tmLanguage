# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Imperative
fileTypes: [c, h, cc, cpp, cs, f, fs, f95, java, shader]
scopeName: source.imperative
uuid: 2623aa92-1182-4d71-b3de-6d87bb234934
patterns:
- include: '#typecasts'
- include: '#annotations'
- include: '#operators'
- include: '#controlflow'
- include: '#typecastgeneric'
#- include: '#regex'
- include: '#constants'
- include: '#directives'
- include: '#imports'
- include: '#accessors'
- include: '#enumerations'
- include: '#classes'
- include: '#structures'
- include: '#constructors'
- include: '#generics'
- include: '#functions'
- include: '#aliases'
- include: '#csharp'
- include: '#cgraphics'
- include: '#attributes'
#- include: '#unityengine'
- include: '#calls'
- include: '#pointers'
#- include: '#unitycomponents'
#- include: '#unityruntime'
- include: '#properties'
- include: '#arrays'
- include: '#indexers'
- include: '#types'
- include: '#generictypes'
- include: '#indirection'
#- include: '#tokens'
#- include: '#yaml'

repository:

  annotations:
    patterns:
    - captures:
        '1': {name: comment.block.source.imperative}
      match: (//)(?!@).*
      name: comment.line.source.imperative
    - begin: /\*(?!@)
      end: \*/
      name: comment.line.source.imperative
      patterns:
      - {match: \*, name: comment.line.source.imperative}
      - {match: ., name: comment.block.source.imperative}
    - {match: '/[/\*]@(\w+)\s|@\*/', name: keyword.storage.source.imperative}
    - {match: //@.*, name: keyword.source.imperative}
    - begin: '/\*@(\w+) '
      end: '@\*/'
      name: keyword.source.imperative
      patterns:
      - {match: ., name: keyword.source.imperative}
    - {match: '[;,]', name: punctuation.comment.source.imperative}
    - begin: (\{)+?
      beginCaptures:
        '1': {name: comment.bracket.c.source.imperative}
      end: (\})+?
      endCaptures:
        '1': {name: comment.bracket.c.source.imperative}
      name: source.imperative
      patterns:
      - begin: (\{)+?
        beginCaptures:
          '1': {name: comment.bracket.b.source.imperative}
        end: (\})+?
        endCaptures:
          '1': {name: comment.bracket.b.source.imperative}
        name: source.imperative
        patterns:
        - begin: (\{)+?
          beginCaptures:
            '1': {name: comment.bracket.a.source.imperative}
          end: (\})+?
          endCaptures:
            '1': {name: comment.bracket.a.source.imperative}
          name: source.imperative
          patterns:
          - begin: (\{)+?
            beginCaptures:
              '1': {name: comment.bracket.source.imperative}
            end: (\})+?
            endCaptures:
              '1': {name: comment.bracket.source.imperative}
            name: source.imperative
            patterns:
            - {include: $self}
            - {match: ., name: source.imperative}
          - {include: $self}
          - {match: ., name: source.imperative}
        - {include: $self}
        - {match: ., name: source.imperative}
      - {include: $self}
      - {match: ., name: source.imperative}
    - begin: (\()+?
      beginCaptures:
        '1': {name: parentheses.source.imperative}
      end: (\))+?
      endCaptures:
        '1': {name: parentheses.source.imperative}
      name: source.imperative
      patterns:
      - begin: (\()+?
        beginCaptures:
          '1': {name: parentheses.a.source.imperative}
        end: (\))+?
        endCaptures:
          '1': {name: parentheses.a.source.imperative}
        name: source.imperative
        patterns:
        - begin: (\()+?
          beginCaptures:
            '1': {name: parentheses.b.source.imperative}
          end: (\))+?
          endCaptures:
            '1': {name: parentheses.b.source.imperative}
          name: source.imperative
          patterns:
          - begin: (\()+?
            beginCaptures:
              '1': {name: parentheses.c.source.imperative}
            end: (\))+?
            endCaptures:
              '1': {name: parentheses.c.source.imperative}
            name: source.imperative
            patterns:
            - begin: (\()+?
              beginCaptures:
                '1': {name: parentheses.d.source.imperative}
              end: (\))+?
              endCaptures:
                '1': {name: parentheses.d.source.imperative}
              name: source.imperative
              patterns:
              - begin: (\()+?
                beginCaptures:
                  '1': {name: parentheses.e.source.imperative}
                end: (\))+?
                endCaptures:
                  '1': {name: parentheses.e.source.imperative}
                name: source.imperative
                patterns:
                - {include: $self}
              - {include: $self}
            - {include: $self}
          - {include: $self}
        - {include: $self}
      - {include: $self}

  operators:
    patterns:
    - match: \->
      name: keyword.other.source.imperative
    - match: '!=|=[=<>]|[<>]=|&&|\|\||<|>'
      name: keyword.operator.comparison.source.imperative
    - match: '=|\|=|&=|=&|=\||%=|!|:|~|\?|%|\->|\||&|^|<<|>>'
      name: keyword.operator.assignment.source.imperative
    - match: '[/\^\*\+\-%&\|]=|\^|\||&|\->|\?|:|\%|\+|\-|\*|\/|\+\+|\-\-|\*\*'
      name: constant.language.source.imperative

  controlflow:
    patterns:
    - begin: \b(foreach)\s*(\()\b
      beginCaptures:
        '1': {name: keyword.control.source.imperative}
        '2': {name: keyword.control.scope.source.imperative}
      end: (\))
      endCaptures:
        '1':
          name: keyword.control.scope.source.imperative
      name: source.imperative
      patterns:
      - match: (?:\w+)\s+(in)\s+(?=(\w+))
        captures:
          '1': {name: keyword.control.source.imperative}
        name: source.imperative
      - include: $self
      - match: .
        name: source.imperative
    - begin: \b(else\s+if|if|while|for|switch|typeof|sizeof)\s*(\()
      beginCaptures:
        '1':
          name: keyword.control.source.imperative
        '2':
          name: keyword.control.scope.source.imperative
      end: (\))
      endCaptures:
        '1':
          name: keyword.control.scope.source.imperative
      name: source.imperative
      patterns:
      - include: $self
      - match: .
        name: source.imperative
    - match: \btry|catch|finally|except|throw\b
      name: constant.language.source.imperative
    - match: \b(lock|async|await|yield|event|delegate)\b
      name: constant.other.threading.source.imperative
    - match: \b(do|else|if|while|for|switch|typeof|sizeof|return|continue|case|break|default|goto)\b
      name: keyword.control.flow.source.imperative
    - match: \b(operator|virtual|static|extends|is|checked|unchecked|override|in|out|ref|readonly|params|stackalloc|explicit|implicit|set|get|if|typedef)\b
      name: keyword.control.modifier.source.imperative
    - captures:
        '1': {name: keyword.control.source.imperative}
        '2': {name: keyword.type.defined.source.imperative}
      match: \b(as|:)\s+(\w+[\[\]<>\?\*]*)
      name: keyword.control.source.imperative

  constants:
    patterns:
    - {match: \b(true|false)\b, name: constant.language.source.imperative}
    - {match: '\b0[Xx][A-Fa-f0-9]?{,8}', name: constant.numeric.source.imperative}
    - {match: '(\s\-)?\b\d+\b', name: constant.numeric.source.imperative}
    - {match: '(\s\-)?\.\d+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?', name: constant.numeric.source.imperative}
    - {match: '\b(((\d+\.?\d*)|(\.\d+))((e|E)(\+|-)?\d+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b',
      name: constant.numeric.source.imperative}
    - {begin: '''', end: '''', name: string.quoted.double.source.imperative}
    - {begin: '"', end: '"', name: string.quoted.double.source.imperative}

  constructors:
    patterns:
    - match: \b(new)\b
      name: constant.language.source.imperative

  directives:
    patterns:
    - captures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: constant.language.source.imperative}
      match: (#)\s*(define|undef)\s+([A-Z_][A-Z_0-9]*)
      name: meta.preprocessor.source.imperative
    - captures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: string.quoted.double.source.imperative}
      match: (#)\s*(error|warning)\s+(\w+)
      name: meta.preprocessor.source.imperative
    - captures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: keyword.control.source.imperative}
      match: (#)\s*(line)\s+(default|hidden)?\s*
      name: meta.preprocessor.source.imperative
    - captures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: string.quoted.source.imperative}
      end: (#)\s*(endregion)([\S])
      endCaptures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: invalid.source.imperative}
      match: (#)\s*(region)\s+(\w+)
      name: meta.preprocessor.source.imperative
      patterns:
      - {include: $self}
    - begin: (#)\s*(if)\s+(\w+)\b
      captures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: constant.language.source.imperative}
      end: (#)\s*(endif)\b\s*(\w+)?
      endCaptures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: invalid.source.imperative}
      name: comment.line.source.imperative
      patterns:
      - captures:
          '1': {name: constant.language.source.imperative}
          '2': {name: keyword.control.source.imperative}
          '3': {name: invalid.source.imperative}
        match: (#)\s*(else)\b[ \t]*(\w*)?
        name: meta.preprocessor.source.imperative
    - captures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
        '3': {name: keyword.type.builtin.source.imperative}
      name: source.imperative
      match: (#)\s*(include)\s+(<[\w\.\-\s]+>)
    - captures:
        '1': {name: constant.language.source.imperative}
        '2': {name: keyword.control.source.imperative}
      match: (#)\s*([\w_]+)
      name: meta.preprocessor.source.imperative

  imports:
    patterns:
    - {match: \b(using|import|use|include|load|require)\b, name: keyword.other.using.source.imperative}
    - captures:
        '1': {name: keyword.storage.source.imperative}
        '2': {name: entity.name.class.a.source.imperative}
        '4': {name: variable.other.source.imperative}
        '5': {name: entity.name.class.b.source.imperative}
        '7': {name: variable.other.source.imperative}
        '8': {name: entity.name.class.c.source.imperative}
        '10': {name: variable.other.source.imperative}
        '11': {name: entity.name.class.d.source.imperative}
        '12': {name: variable.other.source.imperative}
      match: \b(namespace|package|module)\s+(\w+)((\.)(\w+))?((\.)(\w+))?((\.)(\w+))?\s*(?=(\{))
      name: source.imperative
    - captures:
        '1': {name: keyword.storage.source.imperative}
        '2': {name: entity.name.class.a.source.imperative}
        '4': {name: keyword.storage.source.imperative}
        '5': {name: entity.name.class.b.imperative}
        '7': {name: punctuation.source.imperative}
        '8': {name: entity.name.class.c.imperative}
        '10': {name: punctuation.source.imperative}
        '11': {name: entity.name.class.d.source.imperative}
        '12': {name: punctuation.source.imperative}
      match: \b(interface)\s+(\w+)\s+((:)\s*(\w+))?(\s*(,)\s*(\w+))?(\s*(,)\s*(\w+))?\s*(?=\{)
      name: source.imperative

  enumerations:
    patterns:
    - captures:
        '1': {name: storage.source.imperative}
        '2': {name: keyword.type.defined.source.imperative}
        '3': {name: storage.source.imperative}
        '4': {name: keyword.type.builtin.source.imperative}
      match: \b(enum)\s+(\w+)\s*(:)\s*(\w+)\s*(?=\{)

  accessors:
    patterns:
    - captures:
        '1': {name: class.namespace.a.source.imperative}
        '2': {name: class.namespace.b.source.imperative}
        '3': {name: class.namespace.c.source.imperative}
        '4': {name: class.namespace.d.source.imperative}
        '5': {name: class.namespace.e.source.imperative}
        '6': {name: class.namespace.f.source.imperative}
      match: \b(p)(u)(b)(l)(i)(c)\b
      name: entity.name.tag.source.imperative
    - captures:
        '1': {name: class.namespace.a.source.imperative}
        '2': {name: class.namespace.b.source.imperative}
        '3': {name: class.namespace.c.source.imperative}
        '4': {name: class.namespace.d.source.imperative}
        '5': {name: class.namespace.e.source.imperative}
        '6': {name: class.namespace.f.source.imperative}
        '7': {name: class.namespace.g.source.imperative}
        '8': {name: class.namespace.h.source.imperative}
      match: \b(i)(n)(t)(e)(r)(n)(a)(l)\b
      name: entity.name.tag.source.imperative
    - captures:
        '1': {name: class.namespace.a.source.imperative}
        '2': {name: class.namespace.b.source.imperative}
        '3': {name: class.namespace.c.source.imperative}
        '4': {name: class.namespace.d.source.imperative}
        '5': {name: class.namespace.e.source.imperative}
        '6': {name: class.namespace.f.source.imperative}
        '7': {name: class.namespace.g.source.imperative}
        '8': {name: class.namespace.h.source.imperative}
        '9': {name: class.namespace.i.source.imperative}
      match: \b(p)(r)(o)(t)(e)(c)(t)(e)(d)\b
      name: entity.name.tag.source.imperative
    - captures:
        '1': {name: class.namespace.a.source.imperative}
        '2': {name: class.namespace.b.source.imperative}
        '3': {name: class.namespace.c.source.imperative}
        '4': {name: class.namespace.d.source.imperative}
        '5': {name: class.namespace.e.source.imperative}
        '6': {name: class.namespace.f.source.imperative}
        '7': {name: class.namespace.g.source.imperative}
      match: \b(p)(r)(i)(v)(a)(t)(e)\b
      name: entity.name.tag.source.imperative

  classes:
    patterns:
    - match: \b(class)\s+(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)\s*(:?)([\s\w,]*)(?=(\{))
      captures:
        '1': {name: keyword.storage.source.imperative}
        '2': {name: entity.name.class.j.source.imperative}
        '3': {name: entity.name.class.i.source.imperative}
        '4': {name: entity.name.class.h.source.imperative}
        '5': {name: entity.name.class.g.source.imperative}
        '6': {name: entity.name.class.f.source.imperative}
        '7': {name: entity.name.class.e.source.imperative}
        '8': {name: entity.name.class.d.source.imperative}
        '9': {name: entity.name.class.c.source.imperative}
        '10': {name: entity.name.class.b.source.imperative}
        '11': {name: entity.name.class.a.source.imperative}
        '12': {name: keyword.storage.source.imperative}
        '13': {name: defined.type.source.imperative}
      name: source.imperative
    - name: definition.class.source.imperative
      begin: \b(?<=public|internal|protected|private|static)\s+(~?\s*\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)\s*(\()
      beginCaptures:
        '1': {name: entity.name.class.j.source.imperative}
        '2': {name: entity.name.class.i.source.imperative}
        '3': {name: entity.name.class.h.source.imperative}
        '4': {name: entity.name.class.g.source.imperative}
        '5': {name: entity.name.class.f.source.imperative}
        '6': {name: entity.name.class.e.source.imperative}
        '7': {name: entity.name.class.d.source.imperative}
        '8': {name: entity.name.class.c.source.imperative}
        '9': {name: entity.name.class.b.source.imperative}
        '10': {name: entity.name.class.a.source.imperative}
        '11': {name: entity.name.class.source.imperative}
        '12': {name: entity.name.class.j.source.imperative}
      end: (\))\s*(?=(\{))
      endCaptures:
        '1': {name: entity.name.class.j.source.imperative}
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}

  structures:
    patterns:
    - captures:
        '1': {name: keyword.storage.source.imperative}
        '2': {name: storage.type.source.imperative}
      match: \b(struct)\s+(\w[\w_]*[\*\[\]\?]*)\b
      name: source.imperative
    - captures:
        '1': {name: keyword.other.member.source.imperative}
        '2': {name: entity.name.tag.source.imperative}
      match: (?<=(\->))\s*(\w+)
      name: constant.language.source.imperative
    - match: \b(\w+)\s*(?=(\->))
      captures:
        '1': {name: entity.name.tag.source.imperative}
        '2': {name: keyword.other.member.source.imperative}
      name: source.imperative
    - captures:
        '1': {name: storage.source.imperative}
        '2': {name: storage.type.source.imperative}
      match: \b(struct)\s+(\w[\w\d_]*\*?\[?\]?)[\s\n]*

  properties:
    patterns:
    - name: definition.class.source.imperative
      match: \b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)(\b[\[\]<>\?\*]*)\s+(\w+)\s*(?=(\{))
      captures:
        '1': {name: keyword.type.builtin.source.imperative}
        '2': {name: keyword.type.builtin.source.imperative}
        '3': {name: keyword.storage.imperative}

  generics:
    patterns:
    - captures:
        '1': {name: keyword.type.defined.source.imperative}
        '2': {name: keyword.type.defined.source.imperative}
        '3': {name: member.storage.h.source.imperative}
        '4': {name: member.storage.g.source.imperative}
        '5': {name: member.storage.f.source.imperative}
        '6': {name: member.storage.e.source.imperative}
        '7': {name: member.storage.d.source.imperative}
        '8': {name: member.storage.c.source.imperative}
        '9': {name: member.storage.b.source.imperative}
        '10': {name: keyword.type.defined.source.imperative}
      match: \b(\w+)(<)(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)(>)(?!\()
      name: generic.function.source.imperative

  functions:
    patterns:
    - begin: ((void)|(function|func|def)(\s))\s*(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)\s*(\()
      beginCaptures:
        '2': {name: constant.language.source.imperative}
        '3': {name: keyword.storage.source.imperative}
        '4': {name: entity.name.function.a.source.imperative}
        '5': {name: entity.name.function.b.source.imperative}
        '6': {name: entity.name.function.c.source.imperative}
        '7': {name: entity.name.function.d.source.imperative}
        '8': {name: entity.name.function.e.source.imperative}
        '9': {name: entity.name.function.f.source.imperative}
        '10': {name: entity.name.function.g.source.imperative}
        '11': {name: entity.name.function.h.source.imperative}
        '12': {name: entity.name.function.i.source.imperative}
        '13': {name: entity.name.function.j.source.imperative}
        '14': {name: entity.name.function.k.source.imperative}
        '15': {name: entity.name.function.l.source.imperative}
        '16': {name: entity.name.function.m.source.imperative}
        '17': {name: entity.name.function.n.source.imperative}
        '19': {name: entity.name.function.a.source.imperative}
      contentName: source.imperative
      end: (\))
      endCaptures:
        '1': {name: entity.name.function.a.source.imperative}
      name: source.imperative
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}
    - begin: \b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)(\b[\[\]<>\?\*]*)\s+(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)\s*(\()
      beginCaptures:
        '1': {name: keyword.type.builtin.source.imperative}
        '2': {name: keyword.type.builtin.source.imperative}
        '3': {name: entity.name.function.a.source.imperative}
        '4': {name: entity.name.function.b.source.imperative}
        '5': {name: entity.name.function.c.source.imperative}
        '6': {name: entity.name.function.d.source.imperative}
        '7': {name: entity.name.function.e.source.imperative}
        '8': {name: entity.name.function.f.source.imperative}
        '9': {name: entity.name.function.g.source.imperative}
        '10': {name: entity.name.function.h.source.imperative}
        '11': {name: entity.name.function.i.source.imperative}
        '12': {name: entity.name.function.j.source.imperative}
        '13': {name: entity.name.function.k.source.imperative}
        '14': {name: entity.name.function.l.source.imperative}
        '15': {name: entity.name.function.m.source.imperative}
        '16': {name: entity.name.function.a.source.imperative}
      contentName: source.imperative
      end: (\))
      endCaptures:
        '1': {name: entity.name.function.a.source.imperative}
      name: source.imperative
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}
    - begin: \b(\w+\b[\[\]<>\?\*]*)\s+(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)\s*(\()
      beginCaptures:
        '1': {name: keyword.type.defined.source.imperative}
        '2': {name: entity.name.function.a.source.imperative}
        '3': {name: entity.name.function.b.source.imperative}
        '4': {name: entity.name.function.c.source.imperative}
        '5': {name: entity.name.function.d.source.imperative}
        '6': {name: entity.name.function.e.source.imperative}
        '7': {name: entity.name.function.f.source.imperative}
        '8': {name: entity.name.function.g.source.imperative}
        '9': {name: entity.name.function.h.source.imperative}
        '10': {name: entity.name.function.i.source.imperative}
        '11': {name: entity.name.function.j.source.imperative}
        '12': {name: entity.name.function.k.source.imperative}
        '13': {name: entity.name.function.l.source.imperative}
        '14': {name: entity.name.function.m.source.imperative}
        '15': {name: entity.name.function.a.source.imperative}
      contentName: source.imperative
      end: (\))
      endCaptures:
        '1': {name: entity.name.function.a.source.imperative}
      name: source.imperative
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}
    - begin: (\w+)([\[\]\?\*<>])?\s+(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)(<)+?
      beginCaptures:
        '1': {name: storage.type.source.imperative}
        '2': {name: storage.type.source.imperative}
        '3': {name: function.generic.j.source.imperative}
        '4': {name: function.generic.i.source.imperative}
        '5': {name: function.generic.h.source.imperative}
        '6': {name: function.generic.g.source.imperative}
        '7': {name: function.generic.f.source.imperative}
        '8': {name: function.generic.e.source.imperative}
        '9': {name: function.generic.d.source.imperative}
        '10': {name: function.generic.c.source.imperative}
        '11': {name: function.generic.b.source.imperative}
        '12': {name: function.generic.a.source.imperative}
        '13': {name: function.generic.source.imperative}
      end: (>)+?\s*(?=\()
      endCaptures:
        '1': {name: function.generic.source.imperative}
      name: function.generic.a.source.imperative
      patterns:
      - {match: \w+, name: storage.type.source.imperative}
      - {include: $self}
      - {match: ., name: source.imperative}
    - begin: (\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)(<)(\w+)(>)\s+(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)\s*(\()
      beginCaptures:
        '1': {name: entity.name.class.source.imperative}
        '2': {name: entity.name.class.g.source.imperative}
        '3': {name: entity.name.class.f.source.imperative}
        '4': {name: entity.name.class.e.source.imperative}
        '5': {name: entity.name.class.d.source.imperative}
        '6': {name: entity.name.class.c.source.imperative}
        '7': {name: entity.name.class.b.source.imperative}
        '8': {name: entity.name.class.a.source.imperative}
        '9': {name: support.function.source.imperative}
        '10': {name: support.type.source.imperative}
        '11': {name: support.function.source.imperative}
        '12': {name: function.generic.g.source.imperative}
        '13': {name: function.generic.f.source.imperative}
        '14': {name: function.generic.e.source.imperative}
        '15': {name: function.generic.d.source.imperative}
        '16': {name: function.generic.c.source.imperative}
        '17': {name: function.generic.b.source.imperative}
        '18': {name: function.generic.a.source.imperative}
        '19': {name: variable.other.source.imperative}
      end: (\))
      endCaptures:
        '1': {name: variable.other.source.imperative}
      name: source.imperative
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}

  calls:
    patterns:
    - begin: (\w+)\s*(\()
      beginCaptures:
        '1': {name: function.call.source.imperative}
        '2': {name: variable.other.source.imperative}
      end: (\))
      endCaptures:
        '1': {name: variable.other.source.imperative}
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}
#    - begin: (\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)(<)+?
#      beginCaptures:
#        '1': {name: function.generic.source.imperative}
#        '2': {name: function.generic.a.source.imperative}
#        '3': {name: function.generic.b.source.imperative}
#        '4': {name: function.generic.c.source.imperative}
#        '5': {name: function.generic.d.source.imperative}
#        '6': {name: function.generic.e.source.imperative}
#        '7': {name: function.generic.f.source.imperative}
#        '8': {name: function.generic.g.source.imperative}
#        '9': {name: function.generic.h.source.imperative}
#        '10': {name: function.generic.h.source.imperative}
#      end: (>)+?\s*(?=\()
#      endCaptures:
#        '1': {name: function.generic.h.source.imperative}
#      name: source.imperative
#      patterns:
#      - {include: $self}
#      - {match: \b\w+\b, name: defined.type.d.source.imperative}
#      - {match: ., name: source.imperative}

  pointers:
    patterns:
    - name: storage.member.source.imperative
      match: \b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)(\*)
    - captures:
        '1': {name: defined.type.g.source.imperative}
        '2': {name: defined.type.f.source.imperative}
        '3': {name: defined.type.e.source.imperative}
        '4': {name: defined.type.d.source.imperative}
        '5': {name: defined.type.c.source.imperative}
        '6': {name: defined.type.b.source.imperative}
        '7': {name: defined.type.a.source.imperative}
        '8': {name: defined.type.a.source.imperative}
      match: \b(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)(\?)
      name: generic.function.source.imperative

  indexers:
    patterns:
    - begin: \b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)\b(\[)+?
      beginCaptures:
        '1': {name: keyword.type.builtin.source.imperative}
        '2': {name: keyword.type.builtin.source.imperative}
      end: (\])+?
      endCaptures:
        '1': {name: keyword.type.builtin.source.imperative}
      name: source.imperative
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}
    - {match: '\b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)\b(\[[^\]]*\])*',
      name: keyword.type.builtin.source.imperative}
    - captures:
        '1': {name: keyword.type.support.source.imperative}
        '2': {name: keyword.type.support.source.imperative}
      match: \b(Camera|Quaternion|Matrix4x4|Texture2D|GUISkin|GUIStyle|GameObject|Vector2|Vector2Field|Vector3|Vector3Field|Vector4|Vector4Field|Vertex|Vertex3|Transform|Touch|TouchPhase|Color|Rect|Dictionary|List)\b([\[\]\?]*)
      name: variable.other.source.imperative

  types:
    patterns:
    - match: \b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)\b(\[\])*
      name: keyword.type.builtin.source.imperative

  typecasts:
    patterns:
    - captures:
        '1': {name: keyword.type.defined.source.imperative}
        '2': {name: keyword.type.builtin.source.imperative}
        '3': {name: keyword.type.builtin.source.imperative}
        '4': {name: keyword.type.builtin.source.imperative}
        '5': {name: keyword.type.defined.source.imperative}
      match: (\()(\b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)\b)([\[\]]*)(\))
      name: entity.class.name.j.imperative

  typecastgeneric:
    patterns:
    - captures:
        '1': {name: defined.type.a.source.imperative}
        '2': {name: defined.type.d.source.imperative}
      match: (\(\b(\w+)\b(\[[^\]]*\])*\))\s*(\w+)
      name: source.imperative

  attributes:
    patterns:
    - begin: ([\s|\n]+(\[))+?
      beginCaptures:
        '1': {name: modifier.attribute.source.imperative}
      end: (\])+?
      endCaptures:
        '1': {name: modifier.attribute.source.imperative}
      name: source.imperative
      patterns:
      - {include: $self}

  aliases:
    patterns:
    - captures:
        '1': {name: defined.type.g.source.imperative}
        '10': {name: class.namespace.c.source.imperative}
        '11': {name: class.namespace.d.source.imperative}
        '12': {name: class.namespace.e.source.imperative}
        '13': {name: class.namespace.f.source.imperative}
        '14': {name: class.namespace.g.source.imperative}
        '15': {name: class.namespace.h.source.imperative}
        '16': {name: class.namespace.i.source.imperative}
        '17': {name: class.namespace.j.source.imperative}
        '18': {name: class.namespace.k.source.imperative}
        '19': {name: class.namespace.source.imperative}
        '2': {name: defined.type.f.source.imperative}
        '3': {name: defined.type.e.source.imperative}
        '4': {name: defined.type.d.source.imperative}
        '5': {name: defined.type.c.source.imperative}
        '6': {name: defined.type.b.source.imperative}
        '7': {name: defined.type.a.source.imperative}
        '8': {name: class.namespace.a.source.imperative}
        '9': {name: class.namespace.b.source.imperative}
      match: \b(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)(\:\:)(\w)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w?)(\w*)
      name: generic.function.source.imperative

  generictypes:
    patterns:
    - captures:
        '1': {name: defined.type.source.imperative}
        '2': {name: defined.type.source.imperative}
        '3': {name: source.imperative}
      match: '\b(\w+)\b(\[[^\]]*\])*\s+(\w+)'
      name: source.imperative

  arrays:
    patterns:
    - match: \b(bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string)\b(\[\])+
      name: keyword.type.builtin.source.imperative

  csharp:
    patterns:
    - match: \b(new|null|this|base|value|unsafe|readonly|volatile|ref|out)\b
      name: constant.language.source.imperative

  cgraphics:
    patterns:
    - match: \b(inout|const)\b
      name: keyword.other.source.imperative
    - match: \b(float\dx?\d?)\b
      name: keyword.type.defined.source.imperative

  unitycomponents:
    patterns:
    - match: \b(Transform|GameObject|Animation|Rigidbody|CharacterController|MeshCollider|WheelCollider|Collider|SphereCollider|BoxCollider|CapsuleCollider|InteractiveCloth|HingeJoint|SpringJoint|FixedJoint|CharacterJoint|ConfigurableJoint|ConstantForce|NavMeshAgent|OffMeshLink|NavMeshObstacle|AudioSource|AudioListener|AudioReverbZone|MeshFilter|MeshRenderer|SkinnedCloth|SkinnedMeshRenderer|ParticleSystem|LineRenderer|TrailRenderer|Camera|Renderer|Skybox|LensFlare)\b([\[\]]{2,16}|[\?\*]*)
      name: keyword.type.support.source.imperative

  unityruntime:
    patterns:
    - match: UnityEngine
      name: support.class.source.imperative
      patterns:
      - beginCaptures:
          '1': {name: keyword.other.source.imperative}
          '2': {name: support.class.source.imperative}
        match: (\.)(Events|Flash|Rendering|Serialization|SocialPlatforms|Sprites|Windows|WindowsPhone|WSA)
      - {include: $self}
      - {match: ., name: source.imperative}
    - captures:
        '1': {name: inheirited.class.source.imperative}
        '2': {name: variable.other.source.imperative}
        '3': {name: storage.source.imperative}
      match: (GameObject)(\.)(CreatePrimitive|Find|FindGameObjectsWithTag|FindWithTag|Destroy|DestroyImmediate|DontDestroyOnLoad|Instantiate)\b\s*(\([^\)]\))
      name: support.class.source.imperative
    - captures:
        '1': {name: keyword.other.using.source.imperative}
        '2': {name: variable.other.source.imperative}
        '3': {name: storage.source.imperative}
        '4': {name: variable.source.imperative}
      match: (\w+)(\.)(activeInHierarchy|activeSelf|animation|audio|camera|collider|collider2D|constantForce|guiText|guiTexture|hingeJoint|isStatic|layer|light|networkView|particleEmitter|particleSystem|renderer|rigidbody|rigibody2D|tag|transform|hideFlags|name)|(AddComponent|BroadcastMessage|CompareTag|SampleAnimation|SendMessage|SendMessageUpwards|SetActive|CreatePrimitive|Find|FindGameObjectsWithTag|FindWithTag|GetInstanceID|ToString|Destroy|DestroyImmediate|DontDestroyOnLoad|Instantiate)\b\s*(\([^\)]\))
      name: support.class.source.imperative
    - match: \bAnimation\b
      name: support.class.source.imperative
      patterns:
      - captures:
          '1': {name: variable.other.source.imperative}
          '2': {name: variable.source.imperative}
          '3': {name: storage.source.imperative}
          '4': {name: support.function.source.imperative}
          '5': {name: variable.other.source.imperative}
        match: (\.)(animatePhysics|clip|cullingType|isPlaying|localBounds|playAutomatically|wrapMode)|(AddClip|Blend|CrossFade|CrossFadeQueued|getClipCount|isPlaying|Play|PlayQueued|RemoveClip|Rewind|Sample|Stop)\b\s*(\([^\)]\))
      - {include: $self}
      - {match: ., name: source.imperative}
    - captures:
        '1': {name: keyword.other.using.source.imperative}
        '2': {name: variable.other.source.imperative}
        '3': {name: storage.source.imperative}
        '4': {name: support.function.source.imperative}
        '5': {name: variable.other.source.imperative}
      match: \b(Vector2)(\.)(one|right|up|zero|magnitude|normalized|sqrMagnitude|x|y)|(Angle|ClampMagnitude|Distance|Dot|Lerp|Max|Min|MoveTowards|Normalize|MoveTowards|Scale)\b\s*(\([^\)]\))
      name: keyword.control.source.imperative
    - captures:
        '1': {name: keyword.other.using.source.imperative}
        '2': {name: variable.other.source.imperative}
        '3': {name: storage.source.imperative}
        '4': {name: support.function.source.imperative}
        '5': {name: variable.other.source.imperative}
      match: \b(Vector3)(\.)(back|down|forward|left|one|right|up|zero|magnitude|normalized|sqrMagnitude|x|y|z)|(Angle|ClampMagnitude|Cross|Distance|Dot|Lerp|Max|Min|MoveTowards|Normalize|OrthoNormalize|Project|Reflect|RotateTowards|Scale|Slerp|SmoothDamp)\b\s*(\([^\)]\))
      name: keyword.control.source.imperative
    - captures:
        '1': {name: keyword.other.using.source.imperative}
        '2': {name: variable.other.source.imperative}
        '3': {name: storage.source.imperative}
        '4': {name: support.function.source.imperative}
        '5': {name: variable.other.source.imperative}
      match: \b(Vector3)(\.)(one|zero|magnitude|normalized|sqrMagnitude|w|x|y|z)|(Distance|Dot|Lerp|Max|Min|MoveTowards|Normalize|Project|Scale)\b\s*(\([^\)]\))
      name: keyword.control.source.imperative
    - begin: \b(?>(ADBannerView|ADInterstitialAd|Abs|AcceptDrag|Acos|ActivateCurrentOffMeshLink|Add|AddBinaryData|AddClip|AddColor|AddComponent|AddComponentMenu|AddControl|AddCursorRect|AddDefaultControl|AddDisabledItem|AddEvent|AddExplosionForce|AddField|AddFloat|AddForce|AddForceAtPosition|AddFramesFromFile|AddIsValid|AddItem|AddKey|AddMatrix|AddMixingTransform|AddObjectToAsset|AddRange|AddRelativeForce|AddRelativeTorque|AddSeparator|AddTexture|AddTorque|AddTreeInstance|AddVector|AllocObject|AllocateViewID|AngleAxis|AnimationEvent|Apply|ApplyMaterialPropertyDrawers|ApplyModifiedProperties|ApplyTextureType|Approximately|AreStaticEditorFlagsSet|ArrayEquals|ArrowCap|Asin|AssetPathToGUID|Atan|Atan2|AttachCurrentThread|AttachToCollider|Authenticate|Authorize|Awake|Bake|BakeAsync|BakeLightProbesOnly|BakeLightProbesOnlyAsync|BakeMesh|BakeSelected|BakeSelectedAsync|Beep|Begin|BeginArea|BeginChangeCheck|BeginDisabledGroup|BeginGUI|BeginGroup|BeginHorizontal|BeginProperty|BeginSample|BeginScrollView|BeginToggleGroup|BeginVertical|BeginWindows|Blend|Blit|BlitMultiTap|BoneFromMuscle|Bounds|BoundsField|Box|Break|BringWindowToBack|BringWindowToFront|BroadcastMessage|BrowseURL|BuildAssetBundle|BuildAssetBundleExplicitAssetNames|BuildGenericAvatar|BuildHumanAvatar|BuildNavMesh|BuildNavMeshAsync|BuildPlayer|BuildStreamedSceneAssetBundle|Button|CacheProceduralProperty|CalcHeight|CalcLineTranslation|CalcMinMaxWidth|CalcScreenSize|CalcSize|CalculateFrustumPlanes|CalculateLODGroupBoundingBox|CalculatePath|CalculateTransformPath|CalculateTriangulation|Call|CallBooleanMethod|CallByteMethod|CallCharMethod|CallDoubleMethod|CallFloatMethod|CallIntMethod|CallLongMethod|CallObjectMethod|CallShortMethod|CallStatic|CallStaticBooleanMethod|CallStaticByteMethod|CallStaticCharMethod|CallStaticDoubleMethod|CallStaticFloatMethod|CallStaticIntMethod|CallStaticLongMethod|CallStaticObjectMethod|CallStaticShortMethod|CallStaticStringMethod|CallStaticVoidMethod|CallStringMethod|CallVoidMethod|CanStreamedLevelBeLoaded|Cancel|CancelAllLocalNotifications|CancelInvoke|CancelLocalNotification|CancelQuit|CapsuleCast|CapsuleCastAll|CaptureScreenshot|Ceil|CeilToInt|ChangeSetDescription|ChangeSetMove|ChangeSetStatus|ChangeSets|CheckCapsule|CheckSphere|Checkout|CheckoutIsValid|CircleCap|Clamp|Clamp01|CleanCache|Clear|ClearAllNavMeshes|ClearArray|ClearCache|ClearCamera|ClearCorners|ClearCurves|ClearDeveloperConsole|ClearHostList|ClearLabels|ClearLocalNotifications|ClearParticles|ClearPlatformTextureSettings|ClearProgressBar|ClearRandomWriteTargets|ClearRemoteNotifications|ClearUndo|ClearWithSkybox|CloneMaterial|Close|CloseConnection|ClosestPointOnBounds|ClosestPointToArc|ClosestPointToDisc|ClosestPointToPolyLine|ClosestPowerOfTwo|CollapseUndoOperations|CollectDeepHierarchy|CollectDependencies|Color|Color32|ColorField|ColorProperty|Combine|CombineMeshes|CommandEvent|CompareTag|CompleteOffMeshLink|Compress|CompressTexture|Compute|ComputeBuffer|ComputeMD5Hash|ComputeSHA1Hash|ConeCap|Connect|Contains|ContextMenu|ConvertFromJNIArray|ConvertToJNIArray|Copy|CopyAsset|CopyCount|CopyFileOrDirectory|CopyFileOrDirectoryFollowSymlinks|CopyFrom|CopyFromSerializedProperty|CopyPropertiesFromMaterial|CopySerialized|CopyTo|Cos|CountInProperty|CountRemaining|Create|CreateAchievement|CreateAsset|CreateDirectory|CreateEditor|CreateEmptyPrefab|CreateExternalTexture|CreateFolder|CreateFromFile|CreateFromMemory|CreateGameObjectWithHideFlags|CreateInstance|CreateJNIArgArray|CreateJavaProxy|CreateJavaRunnable|CreateLeaderboard|CreateOrUpdateSecondary|CreatePrefab|CreatePrimitive|CreateTerrainGameObject|CrossFade|CrossFadeQueued|CubeCap|Cubemap|CurveField|CustomEditor|CustomPropertyDrawer|CylinderCap|DecreaseLevel|DefaultShaderProperty|Delete|DeleteAll|DeleteArrayElementAtIndex|DeleteAsset|DeleteChangeSets|DeleteChangeSetsIsValid|DeleteCommand|DeleteFileOrDirectory|DeleteGlobalRef|DeleteJNIArgArray|DeleteKey|DeleteLocalRef|DeleteSecondary|DeltaAngle|Destroy|DestroyImmediate|DestroyMaterial|DestroyObjectImmediate|DestroyPlayerObjects|DetachChildren|DetachCurrentThread|DetachFromCollider|DiffHead|DiffIsValid|DisableKeyword|Disc|DiscardContents|Disconnect|DisconnectPrefabInstance|Dispatch|DisplayCancelableProgressBar|DisplayDialog|DisplayDialogComplex|DisplayPopupMenu|DisplayProgressBar|DisplayWizard|Dispose|DistancePointBezier|DistancePointLine|DistancePointToLine|DistancePointToLineSegment|DistanceToArc|DistanceToCircle|DistanceToDisc|DistanceToLine|DistanceToPolyLine|DistanceToRectangle|DoesSourceTextureHaveAlpha|DoesSourceTextureHaveColor|DontDestroyOnLoad|DotCap|DragWindow|Draw|DrawAAPolyLine|DrawBezier|DrawCamera|DrawColorSwatch|DrawCube|DrawCursor|DrawCurveSwatch|DrawDefaultInspector|DrawFrustum|DrawGUITexture|DrawGizmo|DrawHeader|DrawIcon|DrawLine|DrawMesh|DrawMeshNow|DrawPolyLine|DrawPreviewTexture|DrawProcedural|DrawProceduralIndirect|DrawRay|DrawRegionSwatch|DrawSolidArc|DrawSolidDisc|DrawSolidRectangleWithOutline|DrawSphere|DrawTexture|DrawTextureAlpha|DrawTextureWithTexCoords|DrawWireArc|DrawWireCube|DrawWireDisc|DrawWireSphere|DrawWithTextSelection|DropDown|DropShadowLabel|DuplicateCommand|EaseInOut|Edit|Emit|EnableKeyword|Encapsulate|EncodeToPNG|End|EndArea|EndChangeCheck|EndDisabledGroup|EndGUI|EndGroup|EndHorizontal|EndProperty|EndSample|EndScrollView|EndToggleGroup|EndVertical|EndWindows|EnsureLocalCapacity|EnumMaskField|EnumPopup|Equal|EqualContents|EscapeURL|Euler|Evaluate|ExceptionClear|ExceptionDescribe|ExceptionOccurred|ExecuteMenuItem|Exists|Exit|Exp|Expand|ExpandHeight|ExpandWidth|ExportPackage|Expression|ExternalCall|ExternalEval|ExtractOggFile|FatalError|Filter|FilterChildren|FilterCount|Find|FindClass|FindClosestEdge|FindGameObjectsWithTag|FindIndex|FindKernel|FindObjectOfType|FindObjectsOfType|FindObjectsOfTypeAll|FindPrefabRoot|FindProperty|FindPropertyRelative|FindRootGameObjectWithSameParentPref|abFindStyle|FindTexture|FindValidUploadPrefabInstanceRoot|FindWithTag|FixedUpdate|FlexibleSpace|FloatField|FloatProperty|Floor|FloorToInt|Flush|Focus|FocusControl|FocusProjectWindow|FocusTextInControl|FocusWindow|FocusWindowIfItsOpen|Foldout|Font|ForceLOD|FormatBytes|FreeMoveHandle|FreeRotateHandle|FromBooleanArray|FromByteArray|FromCharArray|FromDoubleArray|FromFloatArray|FromIntArray|FromLongArray|FromMonoBehaviour|FromObjectArray|FromReflectedField|FromReflectedMethod|FromScriptableObject|FromShortArray|FromToRotation|GUIContent|GUIDToAssetPath|GUIPointToWorldRay|GUIStyle|GUIToScreenPoint|GameObject|GammaToLinearSpace|GenerateEditableFont|GenerateInBackground|GeneratePerTriangleUV|GenerateSecondaryUVSet|GenerateUniqueAssetPath|Get|GetAccelerationEvent|GetActiveConfigFields|GetActivePlugin|GetActivityIndicatorStyle|GetAllCurves|GetAlphamaps|GetAnimationClips|GetAnimationEvents|GetAnimationUpdateRate|GetAnimatorTransitionInfo|GetArrayElementAtIndex|GetArrayLength|GetAspectRect|GetAssetByGUID|GetAssetByPath|GetAssetListFromSelection|GetAssetOrScenePath|GetAssetPath|GetAtPath|GetAudioClip|GetAveragePing|GetAxis|GetAxisRaw|GetBlendShapeName|GetBlendShapeWeight|GetBoneTransform|GetBool|GetBooleanArrayElement|GetBooleanField|GetBuiltinSkin|GetButton|GetButtonDown|GetButtonUp|GetByteArrayElement|GetByteField|GetCachedIcon|GetCharArrayElement|GetCharField|GetCharacterInfo|GetChild|GetClass|GetClassName|GetClipCount|GetCollisionEvents|GetColor|GetColumn|GetComponent|GetComponentInChildren|GetComponents|GetComponentsInChildren|GetConstructorID|GetControlID|GetControlRect|GetCurrentAnimationClipState|GetCurrentAnimatorStateInfo|GetCurrentGroup|GetCursorPixelPosition|GetCursorStringIndex|GetDSPBufferSize|GetData|GetDefaultPropertyHeight|GetDependencies|GetDetailLayer|GetDeviceCaps|GetDistanceToPoint|GetDoubleArrayElement|GetDoubleField|GetDragAndDropTitle|GetEditorCurve|GetEndProperty|GetEnumerator|GetFieldID|GetFiltered|GetFloat|GetFloatArrayElement|GetFloatField|GetFloatValue|GetGPUProjectionMatrix|GetGenerateAllOutputs|GetGeneratedTexture|GetGeneratedTextures|GetGenericData|GetGroundHit|GetHandleSize|GetHeight|GetHeights|GetIKPosition|GetIKPositionWeight|GetIKRotation|GetIKRotationWeight|GetIconSize|GetIconSizesForTargetGroup|GetIconsForTargetGroup|GetIgnoreLayerCollision|GetIndices|GetInfoString|GetInspectorTitle|GetInstanceID|GetInt|GetIntArrayElement|GetIntField|GetInteger|GetInterpolatedHeight|GetInterpolatedLightProbe|GetInterpolatedNormal|GetItemCount|GetIterator|GetJoystickNames|GetKey|GetKeyDown|GetKeyUp|GetLabels|GetLastPing|GetLastRect|GetLatest|GetLatestIsValid|GetLayerCost|GetLayerName|GetLayerWeight|GetLocalNotification|GetLongArrayElement|GetLongField|GetMaterialCount|GetMaterialOffset|GetMaterialProperties|GetMaterialProperty|GetMaterialScale|GetMaterials|GetMatrix|GetMethodID|GetMonoHeapSize|GetMonoUsedSize|GetMouseButton|GetMouseButtonDown|GetMouseButtonUp|GetMuscleDefaultMax|GetMuscleDefaultMin|GetNameOfFocusedControl|GetNativeTextureID|GetNativeTexturePtr|GetNavMeshLayer|GetNavMeshLayerFromName|GetNavMeshLayerNames|GetNextAnimationClipState|GetNextAnimatorStateInfo|GetObjectArrayElement|GetObjectClass|GetObjectEnabled|GetObjectField|GetObjectPickerControlID|GetObjectPickerObject|GetOutputData|GetParticles|GetPath|GetPixel|GetPixelBilinear|GetPixels|GetPixels32|GetPlatformTextureSettings|GetPoint|GetPointVelocity|GetPosition|GetPostprocessOrder|GetPrefabObject|GetPrefabParent|GetPrefabType|GetPreviewTitle|GetProceduralBoolean|GetProceduralColor|GetProceduralEnum|GetProceduralFloat|GetProceduralOutputType|GetProceduralPropertyDescriptions|GetProceduralTexture|GetProceduralVector|GetPropertyCount|GetPropertyDescription|GetPropertyHeight|GetPropertyModifications|GetPropertyName|GetPropertyType|GetPrototypeNames|GetQualityLevel|GetRangeLimits|GetRawClass|GetRawObject|GetRayIntersection|GetRayIntersectionAll|GetRayIntersectionNonAlloc|GetRect|GetRelativePointVelocity|GetRemoteNotification|GetRow|GetRuntimeMemorySize|GetScreenRect|GetScriptingDefineSymbolsForGroup|GetSecondaries|GetSecondary|GetSecondaryTouch|GetShortArrayElement|GetShortField|GetSide|GetSignature|GetSpectrumData|GetStateObject|GetStatic|GetStaticBooleanField|GetStaticByteField|GetStaticCharField|GetStaticDoubleField|GetStaticEditorFlags|GetStaticFieldID|GetStaticFloatField|GetStaticIntField|GetStaticLongField|GetStaticMethodID|GetStaticObjectField|GetStaticShortField|GetStaticStringField|GetSteepness|GetStreamProgressForLevel|GetString|GetStringField|GetStringUTFChars|GetStringUTFLength|GetStyle|GetSuperclass|GetSupportedLayers|GetTag|GetTemplate|GetTemporary|GetTexDim|GetTextMetaDataPathFromAssetPath|GetTexture|GetTextureAlphaSource|GetTextureOffset|GetTextureScale|GetTopology|GetTotalPointCount|GetTouch|GetTransforms|GetTriangles|GetTypeForControl|GetUniqueTempPathInProject|GetVector|GetVersion|GetWindow|GetWindowWithRect|Gradient|GradientAlphaKey|GradientColorKey|HSVToRGB|HandlePrefixLabel|HasAspectRatio|HasCameraPermissions|HasCharacter|HasGPSPermissions|HasHelpForObject|HasIdentificationPermissions|HasKey|HasMicrophonePermissions|HasObjectThumbnail|HasPreviewGUI|HasProLicense|HasProceduralProperty|HasProperty|HasSharedPermissions|HasUserAuthorization|HavePublicAddress|Height|HelpBox|Hide|Highlight|HighlightIdentifier|HitTest|HorizontalScrollbar|HorizontalSlider|IgnoreCollision|IgnoreLayerCollision|Import|ImportAsset|ImportPackage|InAnimationMode|Incoming|IncomingChangeSetAssets|IncreaseLevel|IncrementCurrentGroup|IndexOf|InitializeSecurity|InitializeServer|Insert|InsertArrayElementAtIndex|InspectorTitlebar|InstanceIDToObject|Instantiate|InstantiateAttachedAsset|InstantiateMaterial|InstantiatePrefab|IntField|IntPopup|IntSlider|InterruptMatchTarget|IntersectRay|Intersects|InvalidateState|Inverse|InverseLerp|InverseTransformDirection|InverseTransformPoint|Invoke|InvokeOnAppThread|InvokeOnUIThread|InvokeRepeating|IsAlive|IsAssignableFrom|IsAvailable|IsAwake|IsChildOf|IsCreated|IsInTransition|IsInstanceOf|IsInvoking|IsMainAsset|IsName|IsOneOfStates|IsOpenForEdit|IsParameterControlledByCurve|IsPersistent|IsPlaying|IsPowerOfTwo|IsProceduralPropertyCached|IsPropertyAnimated|IsRecording|IsSameObject|IsShaderPropertyHidden|IsSleeping|IsState|IsSubAsset|IsTag|IsUserName|IsVersionCached|IssuePluginEvent|KeyboardEvent|LOD|Label|LabelField|LastIndexOf|LateUpdate|LayerField|LayerMask|LayerToName|Lerp|LerpAngle|Linear|LinearToGammaSpace|Linecast|LinecastAll|LinecastNonAlloc|Load|LoadAchievementDescriptions|LoadAchievements|LoadAll|LoadAllAssetRepresentationsAtPath|LoadAllAssetsAtPath|LoadAssetAtPath|LoadAsync|LoadFriends|LoadFromCacheOrDownload|LoadIdentity|LoadImage|LoadImageIntoTexture|LoadLevel|LoadLevelAdditive|LoadLevelAdditiveAsync|LoadLevelAsync|LoadMainAssetAtPath|LoadOrtho|LoadPixelMatrix|LoadProjectionMatrix|LoadRequired|LoadScores|LoadUnityWeb|LoadUsers|LocalNotification|Lock|LockIsValid|LockReloadAssemblies|Log|Log10|LogError|LogException|LogWarning|LookAt|LookLikeControls|LookRotation|MarkAsUsed|MarkDynamic|MarkNonReadable|MarkRestoreExpected|MaskField|MatchTarget|MatchTargetWeightMask|Material|Max|MaxHeight|MaxWidth|MenuCommand|MenuItem|Merge|MergeAllPrefabInstances|Mesh|Min|MinHeight|MinMaxRect|MinMaxSlider|MinWidth|ModalWindow|Move|MoveArrayElement|MoveAsset|MoveAssetToTrash|MoveFileOrDirectory|MoveKey|MovePosition|MoveRotation|MoveTowards|MoveTowardsAngle|MultMatrix|MultiTexCoord|MultiTexCoord2|MultiTexCoord3|MultiplyPoint|MultiplyPoint3x4|MultiplyVector|MuscleFromBone|NameToLayer|NavMeshPath|NewBooleanArray|NewByteArray|NewCharArray|NewDoubleArray|NewFloatArray|NewGlobalRef|NewIntArray|NewLocalRef|NewLongArray|NewObject|NewObjectArray|NewScene|NewShortArray|NewStringUTF|Next|NextPowerOfTwo|NextVisible|NicifyVariableName|Normalize|ObjectContent|ObjectField|OnAnimatorIK|OnAnimatorMove|OnApplicationFocus|OnApplicationPause|OnApplicationQuit|OnAssignMaterialModel|OnAudioFilterRead|OnBecameInvisible|OnBecameVisible|OnCollisionEnter|OnCollisionEnter2D|OnCollisionExit|OnCollisionExit2D|OnCollisionStay|OnCollisionStay2D|OnConnectedToServer|OnControllerColliderHit|OnDestroy|OnDidOpenScene|OnDisable|OnDisconnectedFromServer|OnDrawGizmos|OnDrawGizmosSelected|OnEnable|OnFailedToConnect|OnFailedToConnectToMasterServer|OnFocus|OnGUI|OnGroupAtlases|OnHierarchyChange|OnInspectorGUI|OnInspectorUpdate|OnInteractivePreviewGUI|OnJointBreak|OnLevelWasLoaded|OnLostFocus|OnMasterServerEvent|OnMouseDown|OnMouseDrag|OnMouseEnter|OnMouseExit|OnMouseOver|OnMouseUp|OnMouseUpAsButton|OnNetworkInstantiate|OnParticleCollision|OnPlayerConnected|OnPlayerDisconnected|OnPostRender|OnPostprocessAllAssets|OnPostprocessAudio|OnPostprocessGameObjectWithUserProperties|OnPostprocessModel|OnPostprocessTexture|OnPreCull|OnPreRender|OnPreprocessAudio|OnPreprocessModel|OnPreprocessTexture|OnPreviewGUI|OnPreviewSettings|OnProjectChange|OnRenderImage|OnRenderObject|OnSceneGUI|OnSelectionChange|OnSerializeNetworkView|OnServerInitialized|OnShaderModified|OnTriggerEnter|OnTriggerEnter2D|OnTriggerExit|OnTriggerExit2D|OnTriggerStay|OnTriggerStay2D|OnValidate|OnWillCreateAsset|OnWillDeleteAsset|OnWillMoveAsset|OnWillRenderObject|OnWillSaveAssets|OnWizardCreate|OnWizardOtherButton|OnWizardUpdate|Open|OpenAsset|OpenFilePanel|OpenFolderPanel|OpenProject|OpenScene|OpenSceneAdditive|OpenURL|Optimize|Ortho|OrthoNormalize|OverlapArea|OverlapAreaAll|OverlapAreaNonAlloc|OverlapCircle|OverlapCircleAll|OverlapCircleNonAlloc|OverlapPoint|OverlapPointAll|OverlapPointNonAlloc|OverlapSphere|PackTextures|PasswordField|Pause|PerformRedo|PerformUndo|PeriodicBadgeUpdate|PeriodicUpdate|PerlinNoise|Perspective|PhysicMaterial|PickGameObject|PickRectObjects|Ping|PingObject|PingPong|Plane|Play|PlayClipAtPoint|PlayDelayed|PlayFullScreenMovie|PlayOneShot|PlayQueued|PlayScheduled|PointOnLineParameter|PollHostList|PopAssetDependencies|PopCamera|PopLocalFrame|PopMatrix|Popup|PositionHandle|Pow|PreferenceItem|PrefetchSocketPolicy|PrefixLabel|PrepareStartDrag|PresentLocalNotificationNow|ProgressBar|Project|ProjectPointLine|PropertiesChanged|PropertiesGUI|PropertyField|PropertyToID|PushAssetDependencies|PushCamera|PushLocalFrame|PushMatrix|QueryStateObject|QueueGameViewInputEvent|Quit|RGBToHSV|RPC|RadiusHandle|Range|RangeProperty|Ray|RaySnap|Raycast|RaycastAll|RaycastNonAlloc|ReadAllBytes|ReadPixels|ReadTextureImportInstructions|ReadTextureSettings|RebuildTextures|RebuildTexturesImmediately|RecalculateBounds|RecalculateNormals|ReconnectToLastPrefab|RecordObject|RecordObjects|RecordPrefabInstancePropertyModifications|Rect|RectField|RectOffset|Reflect|Refresh|RefreshPrototypes|RegisterCreatedObjectUndo|RegisterForRemoteNotificationTypes|RegisterHost|RegisterLogCallback|RegisterLogCallbackThreaded|RegisterPropertyChangeUndo|Release|ReleaseTemporary|ReloadAd|Remove|RemoveAll|RemoveAt|RemoveBadge|RemoveClip|RemoveKey|RemoveMixingTransform|RemoveNotification|RemoveRPCs|RemoveRPCsInGroup|RenameAsset|RenameMaterial|Render|RenderGameViewCameras|RenderStaticPreview|RenderTexture|RenderToCubemap|RenderWithShader|Repaint|RepaintHierarchyWindow|RepaintProjectWindow|Repeat|RepeatButton|ReplaceDirectory|ReplaceFile|ReplacePrefab|ReportProgress|ReportScore|RequestCharactersInTexture|RequestHostList|RequestUserAuthorization|RequireComponent|RequiredBone|Reset|ResetAllAchievements|ResetAspect|ResetInputAxes|ResetMaterial|ResetNoBackupFlag|ResetPath|ResetProjectionMatrix|ResetReplacementShader|ResetToPrefabState|ResetWorldToCameraMatrix|Resize|Resolve|ResolveIsValid|Resume|Revert|RevertAllDownToGroup|RevertAllInCurrentGroup|RevertIsValid|RevertPrefabInstance|Rewind|Rotate|RotateAround|RotateAroundPivot|RotateTowards|RotationHandle|Round|RoundToInt|RunningOnAppThread|RunningOnUIThread|SameSide|Sample|SampleAnimation|SampleAnimationClip|SampleHeight|SamplePathPosition|SamplePosition|Save|SaveAssets|SaveCurrentSceneIfUserWantsTo|SaveFilePanel|SaveFilePanelInProject|SaveFolderPanel|SaveScene|Scale|ScaleAroundPivot|ScaleHandle|ScaleSlider|ScaleValueHandle|ScheduleLocalNotification|ScreenPointToRay|ScreenToGUIPoint|ScreenToViewportPoint|ScreenToWorldPoint|ScrollTo|SecondaryTileData|SelectableLabel|SelectionFrame|SelectionGrid|SendEvent|SendMessage|SendMessageUpwards|Serialize|SerializedObject|Set|Set3Points|SetActive|SetActivityIndicatorStyle|SetAlphamaps|SetAnimationClips|SetAnimationEvents|SetAnimationUpdateRate|SetAspectRatio|SetBlendShapeWeight|SetBool|SetBooleanArrayElement|SetBooleanField|SetBuffer|SetByteArrayElement|SetByteField|SetCamera|SetCameraPermissions|SetCharArrayElement|SetCharField|SetColor|SetColors|SetColumn|SetCompletionAction|SetCursor|SetCurve|SetDSPBufferSize|SetData|SetDefaults|SetDensity|SetDestination|SetDetailLayer|SetDetailResolution|SetDirty|SetDoubleArrayElement|SetDoubleField|SetEditorCurve|SetEnabledFading|SetFloat|SetFloatArrayElement|SetFloatField|SetFloats|SetFromToRotation|SetGPSPermissions|SetGenerateAllOutputs|SetGenericData|SetGlobalAnisotropicFilteringLimits|SetGlobalColor|SetGlobalFloat|SetGlobalMatrix|SetGlobalShaderProperty|SetGlobalTexture|SetGlobalVector|SetHeights|SetIKPosition|SetIKPositionWeight|SetIKRotation|SetIKRotationWeight|SetIconSize|SetIconsForTargetGroup|SetIdentificationPermissions|SetIndices|SetInt|SetIntArrayElement|SetIntField|SetInteger|SetInts|SetIsDifferentCacheDirty|SetKeys|SetLODS|SetLabels|SetLayerCost|SetLayerWeight|SetLevelPrefix|SetLongArrayElement|SetLongField|SetLookAtPosition|SetLookAtWeight|SetLookRotation|SetMaterialOffset|SetMaterialScale|SetMatrix|SetMicrophonePermissions|SetMinMax|SetNameSmart|SetNavMeshLayer|SetNeighbors|SetNextControlName|SetNoBackupFlag|SetNormalAndPosition|SetObjectArrayElement|SetObjectEnabled|SetObjectField|SetParticles|SetPass|SetPath|SetPerTriangleUV2|SetPixel|SetPixels|SetPixels32|SetPlatformTextureSettings|SetPosition|SetProceduralBoolean|SetProceduralColor|SetProceduralEnum|SetProceduralFloat|SetProceduralTexture|SetProceduralVector|SetPropertyBlock|SetPropertyModifications|SetQualityLevel|SetRandomWriteTarget|SetReceivingEnabled|SetRenderTarget|SetRenderingResolution|SetReplacementShader|SetResolution|SetRevertBackfacing|SetRow|SetScheduledEndTime|SetScheduledStartTime|SetScope|SetScriptingDefineSymbolsForGroup|SetSelectedWireframeHidden|SetSendingEnabled|SetShader|SetSharedPermissions|SetShortArrayElement|SetShortField|SetStatic|SetStaticBooleanField|SetStaticByteField|SetStaticCharField|SetStaticDoubleField|SetStaticEditorFlags|SetStaticFloatField|SetStaticIntField|SetStaticLongField|SetStaticObjectField|SetStaticShortField|SetStaticStringField|SetString|SetStringField|SetTRS|SetTarget|SetTargetBuffers|SetTexture|SetTextureAlphaSource|SetTextureOffset|SetTextureScale|SetTextureSettings|SetTransformParent|SetTriangles|SetTrigger|SetUserFilter|SetVector|SetVertexCount|SetWidth|ShaderProperty|Show|ShowAchievementsUI|ShowAsContext|ShowAsDropDown|ShowAuxWindow|ShowDefaultAchievementCompletionBanner|ShowHelpForObject|ShowHelpPage|ShowLeaderboardUI|ShowNotification|ShowObjectPicker|ShowPopup|ShowUtility|Sign|SimpleMove|Simulate|Sin|Sleep|Slerp|Slider|Slider2D|SmoothDamp|SmoothDampAngle|SmoothEdges|SmoothStep|SmoothTangents|SnapValue|Space|SphereCap|SphereCast|SphereCastAll|SqrDistance|Sqrt|Start|StartActivityIndicator|StartAnimationMode|StartAssetEditing|StartCoroutine|StartDrag|StartPlayback|StartRecording|Statement|Status|Step|Stop|StopActivityIndicator|StopAllCoroutines|StopAnimationMode|StopAssetEditing|StopCoroutine|StopPeriodicBadgeUpdate|StopPeriodicUpdate|StopPlayback|StopRebuilds|StopRecording|StringToHash|Submit|SubmitIsValid|SupportsRenderTextureFormat|SupportsStencil|SweepTest|SweepTestAll|TRS|TagField|Tan|TestConnection|TestConnectionNAT|TestPlanesAABB|Tetrahedralize|TexCoord|TexCoord2|TexCoord3|TextArea|TextField|Texture2D|Texture3D|TextureProperty|Throw|ThrowNew|ToAngleAxis|ToBooleanArray|ToByteArray|ToCharArray|ToDoubleArray|ToFloatArray|ToIntArray|ToLongArray|ToObjectArray|ToReflectedField|ToReflectedMethod|ToShortArray|ToString|Toggle|ToggleLeft|Toolbar|TransformDirection|TransformPoint|Translate|UnEscapeURL|UnfocusWindow|Unload|UnloadAsset|UnloadUnusedAssets|UnloadUnusedAssetsIgnoreManagedReferences|UnlockIsValid|UnlockReloadAssemblies|UnregisterForRemoteNotifications|UnregisterHost|Update|UpdateBadgeImage|UpdateBadgeNumber|UpdateExternalTexture|UpdateIfDirtyOrScript|UpdatePositions|UpdateSettings|Use|UseDefaultMargins|ValidateMoveAsset|Vector2Field|Vector3FieldVector4Field|VectorProperty|Vertex|Vertex3|VerticalScrollbar|VerticalSlider|Vibrate|Viewport|ViewportPointToRay|ViewportToScreenPoint|ViewportToWorldPoint|WWW|WWWForm|Wait|WaitForSeconds|WakeUp|WarmupAllShaders|Warp|WebCamTexture|Width|Window|WorldPointToSizedRect|WorldToGUIPoint|WorldToScreenPoint|WorldToViewportPoint|WriteAllBytes|WriteImportSettingsIfDirty))\s*(\()
      beginCaptures:
        '2': {name: support.function.source.imperative}
        '3': {name: variable.other.source.imperative}
      end: (\))
      endCaptures:
        '1': {name: variable.other.source.imperative}
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}
    - captures:
        '1': {name: keyword.type.library.source.imperative}
        '2': {name: keyword.type.library.source.imperative}
      match: \b(?>(ADBannerView|ADBannerView.Layout|ADBannerView.Type|ADInterstitialAd|AccelerationEvent|AddComponentMenu|Animation|AnimationBlendMode|AnimationClip|AnimationClipCurveData|AnimationClipPair|AnimationCullingType|AnimationCurve|AnimationEvent|AnimationInfo|AnimationMode|AnimationState|AnimationUtility|AnimationUtility.CurveModifiedType|Animator|AnimatorCullingMode|AnimatorOverrideController|AnimatorStateInfo|AnimatorTransitionInfo|AnisotropicFiltering|ApiCompatibilityLevel|Application|ArrayUtility|AspectRatio|Asset.States|AssetBundle|AssetBundleCreateRequest|AssetBundleRequest|AssetDatabase|AssetDeleteResult|AssetImporter|AssetModificationProcessor|AssetMoveResult|AssetPostprocessor|AsyncOperation|AudioChorusFilter|AudioClip|AudioDistortionFilter|AudioEchoFilter|AudioHighPassFilter|AudioImporter|AudioImporterFormat|AudioImporterLoadType|AudioListener|AudioLowPassFilter|AudioReverbFilter|AudioReverbPreset|AudioReverbZone|AudioRolloffMode|AudioSettings|AudioSource|AudioSpeakerMode|AudioType|AudioVelocityUpdateMode|Avatar|AvatarBuilder|AvatarIKGoal|AvatarTarget|Behaviour|BitStream|BlackBerryBuildSubtarget|BlackBerryBuildType|BlendWeights|BodyPart|BoneState|BoneWeight|Bounds|BoxCollider|BoxCollider2D|BuildAssetBundleOptions|BuildOptions|BuildPipeline|BuildTarget|BuildTargetGroup|Caching|CalendarIdentifier|CalendarUnit|CallbackOrderAttribute|Camera|CameraClearFlags|CanEditMultipleObjects|CapsuleCollider|CharacterController|CharacterInfo|CharacterJoint|CircleCollider2D|ClipAnimationMaskType|Cloth|ClothRenderer|ClothSkinningCoefficient|Collider|Collider2D|Collision|Collision2D|CollisionDetectionMode|CollisionDetectionMode2D|CollisionFlags|Color|Color32|ColorSpace|CombineInstance|Compass|Component|ComputeBuffer|ComputeBufferType|ComputeShader|ConfigurableJoint|ConfigurableJointMotion|ConnectionTesterStatus|ConstantForce|ContactPoint|ContactPoint2D|ContextMenu|ControllerColliderHit|Coroutine|CrashReport|Cubemap|CubemapFace|Cursor|CursorMode|CustomEditor|CustomPropertyDrawer|Debug|DepthTextureMode|DetailPrototype|DetailRenderMode|DeviceOrientation|DeviceType|Display|DistanceJoint2D|DragAndDrop|DragAndDropVisualMode|DrawCameraMode|DrawGizmo|EdgeCollider2D|Editor|EditorApplication|EditorBehaviorMode|EditorGUI|EditorGUILayout|EditorGUIUtility|EditorPrefs|EditorSkin|EditorStyles|EditorUtility|EditorWindow|Event|EventModifiers|EventType|ExecuteInEditMode|ExportPackageOptions|FFTWindow|FileUtil|FilterMode|FixedJoint|Flare|Flash.ActionScript|Flash.FlashPlayer|FlashBuildSubtarget|FocusType|FogMode|Font|FontRenderingMode|FontStyle|FontTextureCase|ForceMode|FullScreenMovieControlMode|FullScreenMovieScalingMode|GL|GUI|GUIContent|GUIElement|GUILayer|GUILayout|GUILayoutOption|GUILayoutUtility|GUISettings|GUISkin|GUIStyle|GUIStyleState|GUIText|GUITexture|GUIUtility|GameObject|GameObjectUtility|GameViewSizeGroupType|GenericMenu|GeometryUtility|GizmoType|Gizmos|Gradient|GradientAlphaKey|GradientColorKey|Graphics|Gyroscope|Handheld|HandleUtility|Handles|Help|HideFlags|HideInInspector|HighlightSearchMode|Highlighter|HingeJoint|HingeJoint2D|HostData|HumanBodyBones|HumanBone|HumanDescription|HumanLimit|HumanTrait|IMECompositionMode|IconDrawStyle|ImageEffectOpaque|ImageEffectTransformsToLDR|ImagePosition|ImportAssetOptions|InitializeOnLoadAttribute|Input|InteractiveCloth|Joint|Joint2D|JointAngleLimits2D|JointDrive|JointDriveMode|JointLimits|JointMotor|JointMotor2D|JointProjectionMode|JointSpring|JointTranslationLimits2D|KeyCode|Keyframe|LOD|LODGroup|LODUtility|LayerMask|LensFlare|Light|LightProbeGroup|LightProbes|LightRenderMode|LightShadows|LightType|LightmapBakeQuality|LightmapData|LightmapEditorSettings|LightmapSettings|Lightmapping|LightmapsMode|LineRenderer|LocalNotification|LocationInfo|LocationService|LocationServiceStatus|LogType|MacFullscreenMode|MasterServer|MasterServerEvent|MatchTargetWeightMask|Material|MaterialEditor|MaterialProperty|MaterialProperty.PropFlags|MaterialProperty.PropType|MaterialProperty.TexDim|MaterialPropertyBlock|MaterialPropertyDrawer|Mathf|Matrix4x4|Media.MediaState|MenuCommand|MenuItem|Mesh|MeshCollider|MeshFilter|MeshRenderer|MeshTopology|MeshUtility|Message.Severity|MessageType|MetroSDK|Microphone|ModelImporter|ModelImporterAnimationCompression|ModelImporterAnimationType|ModelImporterClipAnimation|ModelImporterGenerateAnimations|ModelImporterMaterialName|ModelImporterMaterialSearch|ModelImporterMeshCompression|ModelImporterTangentSpaceMode|MonoBehaviour|MonoScript|MouseCursor|MovieImporter|MovieTexture|NPOTSupport|NavMesh|NavMeshAgent|NavMeshBuilder|NavMeshHit|NavMeshObstacle|NavMeshPath|NavMeshPathStatus|NavMeshTriangulation|Network|NetworkConnectionError|NetworkDisconnection|NetworkLogLevel|NetworkMessageInfo|NetworkPeerType|NetworkPlayer|NetworkReachability|NetworkStateSynchronization|NetworkView|NetworkViewID|NotConvertedAttribute|NotFlashValidatedAttribute|NotRenamedAttribute|NotificationServices|Object|ObjectNames|ObstacleAvoidanceType|OcclusionArea|OcclusionPortal|OffMeshLink|OffMeshLinkData|OffMeshLinkType|PS3BuildSubtarget|Packer.Execution|Particle|ParticleAnimator|ParticleEmitter|ParticleRenderMode|ParticleRenderer|ParticleSystem|ParticleSystem.CollisionEvent|ParticleSystem.Particle|ParticleSystemRenderMode|ParticleSystemRenderer|ParticleSystemSimulationSpace|PhysicMaterial|PhysicMaterialCombine|Physics|Physics2D|PhysicsMaterial2D|Ping|PivotMode|PivotRotation|Plane|PlayMode|PlayerPrefs|PlayerPrefsException|PlayerSettings|PlayerSettings.|PlayerSettings.BlackBerry|PlayerSettings.MetroCompilationOverrides|PlayerSettings.Wii|PlayerSettings.iOS|PolygonCollider2D|PrefabType|PrefabUtility|PreferenceItem|PrimitiveType|ProceduralCacheSize|ProceduralLoadingBehavior|ProceduralMaterial|ProceduralOutputType|ProceduralProcessorUsage|ProceduralPropertyDescription|ProceduralPropertyType|ProceduralTexture|Profiler|Projector|PropertyAttribute|PropertyDrawer|PropertyModification|QualitySettings|Quaternion|QueueMode|RPC|RPCMode|Random|Ray|Ray2D|RaycastHit|RaycastHit2D|Rect|RectOffset|RemoteNotification|RemoteNotificationType|RemoveAssetOptions|RenderBuffer|RenderSettings|RenderTexture|RenderTextureFormat|RenderTextureReadWrite|Renderer|Rendering.BlendMode|Rendering.BlendOp|Rendering.ColorWriteMask|Rendering.CompareFunction|Rendering.CullMode|Rendering.StencilOp|RenderingPath|ReplacePrefabOptions|RequireComponent|Resolution|ResolutionDialogSetting|Resources|Rigidbody|Rigidbody2D|RigidbodyConstraints|RigidbodyInterpolation|RigidbodyInterpolation2D|RigidbodySleepMode2D|RotationDriveMode|RuntimeAnimatorController|RuntimePlatform|SaveType|ScaleMode|Screen|ScreenOrientation|ScriptCallOptimizationLevel|ScriptableObject|ScriptableWizard|SearchFilter.SearchArea|SearchFilter.State|SearchableEditorWindow.SearchMode|SearchableEditorWindow.SearchModeHierarchyWindow|Security|Selection|SelectionMode|SendMessageOptions|SerializeField|SerializedObject|SerializedProperty|SerializedPropertyType|Shader|ShaderUtil|ShaderUtil.ShaderPropertyTexDim|ShaderUtil.ShaderPropertyType|ShadowProjection|SkeletonBone|SkinQuality|SkinnedCloth|SkinnedMeshRenderer|Skybox|SleepTimeout|SliderJoint2D|Social|SocialPlatforms.GameCenter.GameCenterPlatform|SocialPlatforms.IAchievement|SocialPlatforms.IAchievementDescription|SocialPlatforms.ILeaderboard|SocialPlatforms.ILocalUser|SocialPlatforms.IScore|SocialPlatforms.ISocialPlatform|SocialPlatforms.IUserProfile|SocialPlatforms.Range|SocialPlatforms.TimeScope|SocialPlatforms.UserScope|SocialPlatforms.UserState|SoftJointLimit|Space|SphereCollider|SplatPrototype|SpringJoint|SpringJoint2D|Sprite|SpriteAlignment|SpriteImportMode|SpriteMeshType|SpriteMetaData|SpritePackerMode|SpritePackingMode|SpritePackingRotation|SpriteRenderer|Sprites.AtlasSettings|Sprites.IPackerPolicy|StaticBatchingUtility|StaticEditorFlags|StaticOcclusionCulling|StaticOcclusionCullingVisualization|StrippingLevel|SubstanceArchive|SubstanceImporter|SystemInfo|SystemLanguage|TargetGlesGraphics|Terrain|TerrainCollider|TerrainData|TerrainRenderFlags|TextAlignment|TextAnchor|TextAsset|TextClipping|TextEditor.DblClickSnapping|TextMesh|Texture2D|Texture3D|TextureCompressionQuality|TextureFormat|TextureImporter|TextureImporterFormat|TextureImporterGenerateCubemap|TextureImporterMipFilter|TextureImporterNPOTScale|TextureImporterNormalFilter|TextureImporterSettings|TextureImporterType|TextureWrapMode|ThreadPriority|Time|Tool|Tools|Touch|TouchPhase|TouchScreenKeyboard|TouchScreenKeyboardType|TrailRenderer|Transform|TransparencySortMode|Tree|TreeEditorHelper.NodeType|TreeGroup.BuildFlag|TreeGroup.DistributionMode|TreeGroup.LockFlag|TreeGroupBranch.GeometryMode|TreeGroupLeaf.GeometryMode|TreeInstance|TreePrototype|TrueTypeFontImporter|UIOrientation|Undo|UndoPropertyModification|UnwrapParam|Unwrapping|UserAuthorization|VersionControl.Asset|VersionControl.AssetList|VersionControl.ChangeSet|VersionControl.ChangeSets|VersionControl.CheckoutMode|VersionControl.CompletionAction|VersionControl.ConfigField|VersionControl.FileMode|VersionControl.MergeMethod|VersionControl.OnlineState|VersionControl.Plugin|VersionControl.Provider|VersionControl.ResolveMethod|VersionControl.RevertMode|VersionControl.SubmitResult|VersionControl.Task|ViewTool|WSA.Application|WSA.Folder|WSA.SecondaryTileData|WSA.Tile|WSA.TileForegroundText|WSA.TileTemplate|WSA.Toast|WSA.ToastTemplate|WSA.WindowActivated|WSA.WindowActivationState|WSA.WindowSizeChanged|WWW|WWWForm|WaitForEndOfFrame|WaitForFixedUpdate|WaitForSeconds|WebCamDevice|WebCamTexture|WheelCollider|WheelFrictionCurve|WheelHit|WiiBuildDebugLevel|WiiBuildSubtarget|WiiHio2Usage|WiiRegion|Windows.Crypto|Windows.Directory|Windows.File|WindowsPhone.Media|WrapMode|XboxBuildSubtarget|XboxRunMethod|YieldInstruction|iOSActivityIndicatorStyle|iOSSdkVersion|iOSShowActivityIndicatorOnLoading|iOSStatusBarStyle|iOSTargetDevice|iOSTargetOSVersion|iOSTargetResolution|iPhone|iPhoneGeneration))\b\s*([\[\]]{2})*
      name: keyword.type.library.source.imperative

  indirection:
    patterns:
    - captures:
        '2': {name: member.storage.source.imperative}
        '3': {name: variable.other.source.imperative}
        '5': {name: member.storage.b.source.imperative}
        '6': {name: variable.other.source.imperative}
        '8': {name: member.storage.c.source.imperative}
        '9': {name: variable.other.source.imperative}
        '11': {name: member.storage.d.source.imperative}
        '12': {name: variable.other.source.imperative}
        '14': {name: member.storage.e.source.imperative}
        '15': {name: variable.other.source.imperative}
        '17': {name: member.storage.f.source.imperative}
        '18': {name: variable.other.source.imperative}
        '20': {name: member.storage.g.source.imperative}
        '21': {name: variable.other.source.imperative}
        '23': {name: member.storage.h.source.imperative}
        '24': {name: variable.other.source.imperative}
        '26': {name: member.storage.a.source.imperative}
        '27': {name: variable.other.source.imperative}
      match: \b((\w+)(\.))((\w+)(\.))?((\w+)(\.))?((\w+)(\.))?((\w+)(\.))?((\w+)(\.))?((\w+)(\.))?((\w+)(\.)){64}?
      name: member.storage.a.source.imperative
    - begin: (\w+)\s*(\[)
      beginCaptures:
        '1': {name: storage.source.imperative}
        '2': {name: storage.source.imperative}
      end: (\])
      endCaptures:
        '1': {name: storage.source.imperative}
      name: source.imperative
      patterns:
      - {include: $self}
      - {match: ., name: source.imperative}
...
